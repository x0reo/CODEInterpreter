//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\a\Desktop\Interpreter\Interpreter\Content\CODE.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Interpreter.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class CODELexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, IF=27, WHILE=28, BOOL_OPERATOR=29, INTEGER=30, FLOAT=31, 
		STRING=32, BOOL=33, NULL=34, WS=35, IDENTIFIER=36;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "IF", "WHILE", "BOOL_OPERATOR", "INTEGER", "FLOAT", "STRING", 
		"BOOL", "NULL", "WS", "IDENTIFIER"
	};


	public CODELexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'BEGIN CODE'", "'END CODE'", "'('", "')'", "'BEGIN IF'", "'END IF'", 
		"'else'", "'='", "':'", "','", "'#'", "'!'", "'*'", "'/'", "'%'", "'+'", 
		"'-'", "'&'", "'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'{'", "'}'", 
		"'IF'", null, null, null, null, null, null, "'null'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, "IF", "WHILE", "BOOL_OPERATOR", "INTEGER", "FLOAT", 
		"STRING", "BOOL", "NULL", "WS", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CODE.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2&\xFB\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6"+
		"\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b"+
		"\x3\b\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE"+
		"\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3"+
		"\x13\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3"+
		"\x17\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3"+
		"\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3"+
		"\x1D\x3\x1D\x3\x1D\x3\x1D\x5\x1D\xB0\n\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E"+
		"\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x5\x1E\xBA\n\x1E\x3\x1F\x6\x1F\xBD\n\x1F"+
		"\r\x1F\xE\x1F\xBE\x3 \x6 \xC2\n \r \xE \xC3\x3 \x3 \x6 \xC8\n \r \xE "+
		"\xC9\x3!\x3!\a!\xCE\n!\f!\xE!\xD1\v!\x3!\x3!\x3!\a!\xD6\n!\f!\xE!\xD9"+
		"\v!\x3!\x5!\xDC\n!\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x5\"\xE7"+
		"\n\"\x3#\x3#\x3#\x3#\x3#\x3$\x6$\xEF\n$\r$\xE$\xF0\x3$\x3$\x3%\x3%\a%"+
		"\xF7\n%\f%\xE%\xFA\v%\x2\x2\x2&\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2"+
		"\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2"+
		"\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2"+
		"\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2"+
		"\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&\x3\x2\b\x3\x2"+
		"\x32;\x3\x2$$\x3\x2))\x5\x2\v\f\xF\xF\"\"\x5\x2\x43\\\x61\x61\x63|\x6"+
		"\x2\x32;\x43\\\x61\x61\x63|\x106\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2"+
		"\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
		"\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2"+
		"/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2"+
		"\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x3K\x3\x2\x2\x2\x5V\x3\x2\x2\x2\a"+
		"_\x3\x2\x2\x2\t\x61\x3\x2\x2\x2\v\x63\x3\x2\x2\x2\rl\x3\x2\x2\x2\xFs\x3"+
		"\x2\x2\x2\x11x\x3\x2\x2\x2\x13z\x3\x2\x2\x2\x15|\x3\x2\x2\x2\x17~\x3\x2"+
		"\x2\x2\x19\x80\x3\x2\x2\x2\x1B\x82\x3\x2\x2\x2\x1D\x84\x3\x2\x2\x2\x1F"+
		"\x86\x3\x2\x2\x2!\x88\x3\x2\x2\x2#\x8A\x3\x2\x2\x2%\x8C\x3\x2\x2\x2\'"+
		"\x8E\x3\x2\x2\x2)\x91\x3\x2\x2\x2+\x94\x3\x2\x2\x2-\x96\x3\x2\x2\x2/\x98"+
		"\x3\x2\x2\x2\x31\x9B\x3\x2\x2\x2\x33\x9E\x3\x2\x2\x2\x35\xA0\x3\x2\x2"+
		"\x2\x37\xA2\x3\x2\x2\x2\x39\xAF\x3\x2\x2\x2;\xB9\x3\x2\x2\x2=\xBC\x3\x2"+
		"\x2\x2?\xC1\x3\x2\x2\x2\x41\xDB\x3\x2\x2\x2\x43\xE6\x3\x2\x2\x2\x45\xE8"+
		"\x3\x2\x2\x2G\xEE\x3\x2\x2\x2I\xF4\x3\x2\x2\x2KL\a\x44\x2\x2LM\aG\x2\x2"+
		"MN\aI\x2\x2NO\aK\x2\x2OP\aP\x2\x2PQ\a\"\x2\x2QR\a\x45\x2\x2RS\aQ\x2\x2"+
		"ST\a\x46\x2\x2TU\aG\x2\x2U\x4\x3\x2\x2\x2VW\aG\x2\x2WX\aP\x2\x2XY\a\x46"+
		"\x2\x2YZ\a\"\x2\x2Z[\a\x45\x2\x2[\\\aQ\x2\x2\\]\a\x46\x2\x2]^\aG\x2\x2"+
		"^\x6\x3\x2\x2\x2_`\a*\x2\x2`\b\x3\x2\x2\x2\x61\x62\a+\x2\x2\x62\n\x3\x2"+
		"\x2\x2\x63\x64\a\x44\x2\x2\x64\x65\aG\x2\x2\x65\x66\aI\x2\x2\x66g\aK\x2"+
		"\x2gh\aP\x2\x2hi\a\"\x2\x2ij\aK\x2\x2jk\aH\x2\x2k\f\x3\x2\x2\x2lm\aG\x2"+
		"\x2mn\aP\x2\x2no\a\x46\x2\x2op\a\"\x2\x2pq\aK\x2\x2qr\aH\x2\x2r\xE\x3"+
		"\x2\x2\x2st\ag\x2\x2tu\an\x2\x2uv\au\x2\x2vw\ag\x2\x2w\x10\x3\x2\x2\x2"+
		"xy\a?\x2\x2y\x12\x3\x2\x2\x2z{\a<\x2\x2{\x14\x3\x2\x2\x2|}\a.\x2\x2}\x16"+
		"\x3\x2\x2\x2~\x7F\a%\x2\x2\x7F\x18\x3\x2\x2\x2\x80\x81\a#\x2\x2\x81\x1A"+
		"\x3\x2\x2\x2\x82\x83\a,\x2\x2\x83\x1C\x3\x2\x2\x2\x84\x85\a\x31\x2\x2"+
		"\x85\x1E\x3\x2\x2\x2\x86\x87\a\'\x2\x2\x87 \x3\x2\x2\x2\x88\x89\a-\x2"+
		"\x2\x89\"\x3\x2\x2\x2\x8A\x8B\a/\x2\x2\x8B$\x3\x2\x2\x2\x8C\x8D\a(\x2"+
		"\x2\x8D&\x3\x2\x2\x2\x8E\x8F\a?\x2\x2\x8F\x90\a?\x2\x2\x90(\x3\x2\x2\x2"+
		"\x91\x92\a#\x2\x2\x92\x93\a?\x2\x2\x93*\x3\x2\x2\x2\x94\x95\a@\x2\x2\x95"+
		",\x3\x2\x2\x2\x96\x97\a>\x2\x2\x97.\x3\x2\x2\x2\x98\x99\a@\x2\x2\x99\x9A"+
		"\a?\x2\x2\x9A\x30\x3\x2\x2\x2\x9B\x9C\a>\x2\x2\x9C\x9D\a?\x2\x2\x9D\x32"+
		"\x3\x2\x2\x2\x9E\x9F\a}\x2\x2\x9F\x34\x3\x2\x2\x2\xA0\xA1\a\x7F\x2\x2"+
		"\xA1\x36\x3\x2\x2\x2\xA2\xA3\aK\x2\x2\xA3\xA4\aH\x2\x2\xA4\x38\x3\x2\x2"+
		"\x2\xA5\xA6\ay\x2\x2\xA6\xA7\aj\x2\x2\xA7\xA8\ak\x2\x2\xA8\xA9\an\x2\x2"+
		"\xA9\xB0\ag\x2\x2\xAA\xAB\aw\x2\x2\xAB\xAC\ap\x2\x2\xAC\xAD\av\x2\x2\xAD"+
		"\xAE\ak\x2\x2\xAE\xB0\an\x2\x2\xAF\xA5\x3\x2\x2\x2\xAF\xAA\x3\x2\x2\x2"+
		"\xB0:\x3\x2\x2\x2\xB1\xB2\a\x63\x2\x2\xB2\xB3\ap\x2\x2\xB3\xBA\a\x66\x2"+
		"\x2\xB4\xB5\aq\x2\x2\xB5\xBA\at\x2\x2\xB6\xB7\az\x2\x2\xB7\xB8\aq\x2\x2"+
		"\xB8\xBA\at\x2\x2\xB9\xB1\x3\x2\x2\x2\xB9\xB4\x3\x2\x2\x2\xB9\xB6\x3\x2"+
		"\x2\x2\xBA<\x3\x2\x2\x2\xBB\xBD\t\x2\x2\x2\xBC\xBB\x3\x2\x2\x2\xBD\xBE"+
		"\x3\x2\x2\x2\xBE\xBC\x3\x2\x2\x2\xBE\xBF\x3\x2\x2\x2\xBF>\x3\x2\x2\x2"+
		"\xC0\xC2\t\x2\x2\x2\xC1\xC0\x3\x2\x2\x2\xC2\xC3\x3\x2\x2\x2\xC3\xC1\x3"+
		"\x2\x2\x2\xC3\xC4\x3\x2\x2\x2\xC4\xC5\x3\x2\x2\x2\xC5\xC7\a\x30\x2\x2"+
		"\xC6\xC8\t\x2\x2\x2\xC7\xC6\x3\x2\x2\x2\xC8\xC9\x3\x2\x2\x2\xC9\xC7\x3"+
		"\x2\x2\x2\xC9\xCA\x3\x2\x2\x2\xCA@\x3\x2\x2\x2\xCB\xCF\a$\x2\x2\xCC\xCE"+
		"\n\x3\x2\x2\xCD\xCC\x3\x2\x2\x2\xCE\xD1\x3\x2\x2\x2\xCF\xCD\x3\x2\x2\x2"+
		"\xCF\xD0\x3\x2\x2\x2\xD0\xD2\x3\x2\x2\x2\xD1\xCF\x3\x2\x2\x2\xD2\xDC\a"+
		"$\x2\x2\xD3\xD7\a)\x2\x2\xD4\xD6\n\x4\x2\x2\xD5\xD4\x3\x2\x2\x2\xD6\xD9"+
		"\x3\x2\x2\x2\xD7\xD5\x3\x2\x2\x2\xD7\xD8\x3\x2\x2\x2\xD8\xDA\x3\x2\x2"+
		"\x2\xD9\xD7\x3\x2\x2\x2\xDA\xDC\a)\x2\x2\xDB\xCB\x3\x2\x2\x2\xDB\xD3\x3"+
		"\x2\x2\x2\xDC\x42\x3\x2\x2\x2\xDD\xDE\av\x2\x2\xDE\xDF\at\x2\x2\xDF\xE0"+
		"\aw\x2\x2\xE0\xE7\ag\x2\x2\xE1\xE2\ah\x2\x2\xE2\xE3\a\x63\x2\x2\xE3\xE4"+
		"\an\x2\x2\xE4\xE5\au\x2\x2\xE5\xE7\ag\x2\x2\xE6\xDD\x3\x2\x2\x2\xE6\xE1"+
		"\x3\x2\x2\x2\xE7\x44\x3\x2\x2\x2\xE8\xE9\ap\x2\x2\xE9\xEA\aw\x2\x2\xEA"+
		"\xEB\an\x2\x2\xEB\xEC\an\x2\x2\xEC\x46\x3\x2\x2\x2\xED\xEF\t\x5\x2\x2"+
		"\xEE\xED\x3\x2\x2\x2\xEF\xF0\x3\x2\x2\x2\xF0\xEE\x3\x2\x2\x2\xF0\xF1\x3"+
		"\x2\x2\x2\xF1\xF2\x3\x2\x2\x2\xF2\xF3\b$\x2\x2\xF3H\x3\x2\x2\x2\xF4\xF8"+
		"\t\x6\x2\x2\xF5\xF7\t\a\x2\x2\xF6\xF5\x3\x2\x2\x2\xF7\xFA\x3\x2\x2\x2"+
		"\xF8\xF6\x3\x2\x2\x2\xF8\xF9\x3\x2\x2\x2\xF9J\x3\x2\x2\x2\xFA\xF8\x3\x2"+
		"\x2\x2\xE\x2\xAF\xB9\xBE\xC3\xC9\xCF\xD7\xDB\xE6\xF0\xF8\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Interpreter.Content
